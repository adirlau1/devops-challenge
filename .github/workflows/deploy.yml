name: Deploy Pipeline

on:
  workflow_run:
    workflows: ["Build Pipeline"]
    types:
      - completed
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Terraform Init
        run: terraform init -reconfigure
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        if: ${{ github.ref == 'refs/heads/main' }} && ${{ github.event_name == 'push' }}
        run: terraform apply -auto-approve tfplan
        continue-on-error: true
        working-directory: ./terraform
      
      - name: Import Existing Security Group (If Apply fails)
        if: steps.apply.outcome == 'failure' # This will run if the previous step failed
        run: |
          SECURITY_GROUP_ID=$(aws ec2 describe-security-groups --region eu-central-1 --filters Name=group-name,Values=allow_http_ssh --query 'SecurityGroups[*].GroupId' --output text)
          terraform import module.security_group.aws_security_group.allow_http_ssh $SECURITY_GROUP_ID
        working-directory: ./terraform

      - name: Terraform Apply (Retry after import)
        if: steps.apply.outcome == 'failure' # This will run if the import step was necessary
        run: terraform apply -auto-approve
        working-directory: ./terraform

  


        

        